Command: ninja all
[1/11] Linking C static library esp-idf/espressif__esp32-camera/libespressif__esp32-camera.a
[2/11] Performing build step for 'bootloader'
[1/1] cd /home/atoth/EspCam4011/cam_streaming/build/bootloader/esp-idf/esptool_py && /home/atoth/.espressif/python_env/idf6.0_py3.10_env/bin/python /home/atoth/EspCam4011/esp-idf/components/partition_table/check_sizes.py --offset 0x8000 bootloader 0x1000 /home/atoth/EspCam4011/cam_streaming/build/bootloader/bootloader.bin
Bootloader binary size 0x6680 bytes. 0x980 bytes (8%) free.
[3/9] Building C object esp-idf/main/CMakeFiles/__idf_main.dir/main.c.obj
[4/9] Linking C static library esp-idf/main/libmain.a
[5/9] Generating esp-idf/esp_system/ld/sections.ld
[6/9] Building C object CMakeFiles/cam_streaming.elf.dir/project_elf_src_esp32.c.obj
[7/9] Linking CXX executable cam_streaming.elf
[8/9] Generating binary image from built executable
esptool.py v4.9.dev8
Creating esp32 image...
Merged 2 ELF sections
Successfully created esp32 image.
Generated /home/atoth/EspCam4011/cam_streaming/build/cam_streaming.bin
[9/9] cd /home/atoth/EspCam4011/cam_streaming/build/esp-idf/esptool_py && /home/atoth/.espressif/python_env/idf6.0_py3.10_env/bin/python /home/atoth/EspCam4011/esp-idf/components/partition_table/check_sizes.py --offset 0x8000 partition --type app /home/atoth/EspCam4011/cam_streaming/build/partition_table/partition-table.bin /home/atoth/EspCam4011/cam_streaming/build/cam_streaming.bin
cam_streaming.bin binary size 0xcf7b0 bytes. Smallest app partition is 0x100000 bytes. 0x30850 bytes (19%) free.
